/* global styles */

body {
    background-color: LavenderBlush;
    color: Teal;
    font-size: 100%;
    font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    line-height: 1.5;
    margin: 0;
    padding: 1rem;
  }
  
  *, ::after, ::before {
    box-sizing: border-box;
  }
  
  
  /* grid styles */
  
  .container {
    max-width: 960px;
    margin: 0 auto;
    display: flex;
  }
  
  $columns: 12; // number of columns in the grid system
  
  .col {
    background-color: pink;
    border: LavenderBlush 2px solid;
    border-radius: 8px;
    padding: 16px;
  }
  
  /* one sass function to automatically create this:
        .col-1 { flex-basis: 8.333%; }
        .col-2 { flex-basis: 16.666%; } 
        .col-3 { flex-basis: 25%; }
        .col-4 { flex-basis: 33.333%; }
        .col-5 { flex-basis: 41.666%; }
        .col-6 { flex-basis: 50%; }
        ...
        .col-12 { flex-basis: 100%; }
    This is definitely much easier to work with. As we develop our grid further and, 
    letâ€™s say, would like to change it from 12 columns to 16 columns, 
    all we have to do is to update a single variable 
    (in comparison to dozens of classes and values).
  */
  @for $width from 1 through $columns {
    .col-#{$width} {
      flex-basis: $width / $columns * 100%;
    }  
  }